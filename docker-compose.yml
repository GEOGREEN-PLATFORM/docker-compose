services:
  postgresql-geospatial-server:
    image: postgres:16
    hostname: postgresql-geospatial-server
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: geospatial-server
      POSTGRES_USER: geospatial-server-username
      POSTGRES_PASSWORD: password
    volumes:
      - postgresql-geospatial-server:/var/lib/postgresql-geospatial-server/data

  geospatial-server:
    image: ghcr.io/geogreen-platform/geospatial-server:latest
    container_name: geospatial-server
    pull_policy: always
    ports:
      - "8091:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql-geospatial-server:5432/geospatial-server
    depends_on:
      - postgresql-geospatial-server

  minio-service:
    image: minio/minio
    container_name: minio-service
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./data:/data
      - ./config:/root/.minio

  file-server:
    image: ghcr.io/geogreen-platform/file-server:latest
    container_name: file-server
    pull_policy: always
    ports:
      - "8092:8080"
    environment:
      CLOUD_HOST: http://minio-service:9000
    depends_on:
      - minio-service
  web-app:
    image: ghcr.io/geogreen-platform/web-app:latest
    container_name: web-app
    ports:
      - "3000:3000"  
    environment:
      NUXT_HOST: 0.0.0.0   
      PORTAL_HTTP_PROTOCOL: http
      PORTAL_API_HOST: localhost
      PORTAL_PORT: '8091'

  photo-analyser:
    image: ghcr.io/geogreen-platform/photo-analysis:latest
    container_name: photo-analyser
    ports:
      - "8093:8080"
    environment:
      - SERVER_PORT=8080

networks:
  backend:
    external: true

volumes:
  postgresql-geospatial-server: { }

